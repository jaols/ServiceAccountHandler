$option = New-PSSessionOption -IncludePortInSPN
$session = New-PSSession -ComputerName sqlvm -SessionOption $option
Invoke-Command -Session $session -scriptblock {Get-Item "C:\" }

$sess = New-PSSession -ConfigurationName Microsoft.PowerShell -Credential $Creds -ConnectionUri http://sqlvm.rkdev.com:5985/wsman

function Set-%Type%Password {
	return [streing[]] "Found instances"
}





Import-Module WebAdministration
 $applicationPools = Get-ChildItem IIS:AppPools | where { $_.processModel.userName -eq "domainusername" }
  
 foreach($pool in $applicationPools)
 {
     $pool.processModel.userName = "domainusername"
     $pool.processModel.password = "password"
     $pool.processModel.identityType = 3
     $pool | Set-Item
 }



Param(
  [Parameter(Mandatory=$true,ValueFromPipeline=$true)][string[]]$ComputerName,
  [Parameter(Mandatory=$true)][PSCredential]$Credential,
  [Parameter(Mandatory=$true)][PSCredential]$TaskCredential
)

Invoke-Command -ComputerName $ComputerName -Credential $Credential -ScriptBlock 
{ Get-ScheduledTask | 
	Where-Object { $_.Principal.UserId -eq ($using:TaskCredential).UserName.Split('\')[1] } | 
		Set-ScheduledTask -User ($using:TaskCredential).UserName -Password ($using:TaskCredential).GetNetworkCredential().Password
}


Get-CimInstance -ClassName win32_service -Property startmode, startname, name | select startname, startmode, name

Get-CimInstance -ClassName win32_service -Filter 'startname="LocalSystem"' -Property startmode, startname, name | select startname, startmode, name